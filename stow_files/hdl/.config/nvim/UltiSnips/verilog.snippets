global !p
def split_line(text):
	import textwrap
	lines = textwrap.wrap(text, 50 - 19)
	output = list()
	for line in lines:
		output.append('-'*2 + ' '*17 + line)
	snip_line = snip.tabstops[4].end[0]
	snip.buffer.append(output, snip_line + 1)
	del snip.buffer[snip_line]
endglobal

post_jump "if snip.tabstop == 0 : split_line(snip.tabstops[4].current_text)"
snippet header "File header"
/************************************************
**  File:          `!p snip.rv = fn`
**
**  Entity:        `!p snip.rv = snip.fn.split(".")[0]`
**  Author:        ${2:Jason Blocklove}
**  Created:       `date +%m/%d/%y`
**  Modified:      ${3}
**  Verilog
**  Description:   The following is the entity and
**                 architectural description of a
**                 ${4:I need a really long default here so I don't have to type so much !}
************************************************/
${0}
endsnippet

snippet module "module...endmodule"
module ${1} (
${2:}
)

endmodule
endsnippet

